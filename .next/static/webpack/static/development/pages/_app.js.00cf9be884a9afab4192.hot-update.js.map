{"version":3,"file":"static/webpack/static/development/pages/_app.js.00cf9be884a9afab4192.hot-update.js","sources":["webpack:///./components/LoginForm.js","webpack:///./pages/signup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { Input, Button, Form } from \"antd\";\nimport a from \"../pages/signup\";\nconst LoginForm = () => {\n  const [state, setstate] = useState(initialState);\n  return (\n    <Form>\n      <div>\n        <label htmlFor=\"user-id\">아이디</label>\n        <br />\n        <Input name=\"user-id\" required />\n      </div>\n      <div>\n        <label htmlFor=\"user-password\">비밀번호</label>\n        <br />\n        <Input name=\"user-password\" type=\"password\" required />\n      </div>\n      <div>\n        <Button type=\"primary\" htmlType=\"submit\" loading={false}>\n          로그인\n        </Button>\n        <Link href=\"/signup\">\n          <a>\n            <Button>회원가입</Button>\n          </a>\n        </Link>\n      </div>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState, useCallback } from \"react\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\n\nexport const useInput = (initValue = null) => {\n  const [value, setter] = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Signup = () => {\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\n  const [term, setTerm] = useState(false);\n  const [PasswordError, setPasswordError] = useState(false);\n  const [termError, setTermError] = useState(false);\n\n  const [id, onchangeId] = useInput(\"\");\n  const [nick, onchangeNick] = useInput(\"\");\n  const [password, onchangePassword] = useInput(\"\");\n\n  const onSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      if (password !== passwordCheck) {\n        return setPasswordError(true);\n      }\n      if (!term) {\n        return setTermError(true);\n      }\n    },\n    [password, passwordCheck, term]\n  );\n\n  const onchangePasswordCheck = useCallback(\n    e => {\n      setPasswordError(e.target.value !== password);\n      setPasswordCheck(e.target.value);\n    },\n    [password]\n  );\n  const onchangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n\n  return (\n    <>\n      <Form onSubmit={onSubmit} style={{ padding: 10 }}>\n        <div>\n          <label htmlFor=\"user-id\">아이디</label>\n          <br />\n          <Input name=\"user-id\" value={id} required onChange={onchangeId} />\n        </div>\n        <div>\n          <label htmlFor=\"user-nick\">닉네임</label>\n          <br />\n          <Input name=\"user-nick\" value={nick} required onChange={onchangeNick} />\n        </div>\n        <div>\n          <label htmlFor=\"user-password\">비밀번호</label>\n          <br />\n          <Input name=\"user-password\" type=\"password\" value={password} required onChange={onchangePassword} />\n        </div>\n        <div>\n          <label htmlFor=\"user-password-check\">비밀번호체크</label>\n          <br />\n          <Input\n            name=\"user-password-check\"\n            type=\"password\"\n            value={passwordCheck}\n            required\n            onChange={onchangePasswordCheck}\n          />\n          {PasswordError && <div style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다.</div>}\n        </div>\n        <div>\n          <Checkbox name=\"user-term\" value={term} onChange={onchangeTerm}>\n            회원가입 약관에 동의합니다.\n          </Checkbox>\n          {termError && <div style={{ color: \"red\" }}>약관에 동의하셔야 합니다.</div>}\n        </div>\n        <div style={{ marginTop: 10 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            가입하기\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nexport default Signup;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}